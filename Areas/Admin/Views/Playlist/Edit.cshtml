@using ExtremeInsiders.Data
@using ExtremeInsiders.Entities
@using ExtremeInsiders.Helpers
@model ExtremeInsiders.Entities.Playlist
@inject ApplicationContext _db;

@{
    ViewData["Title"] = "Изменение";
}

<h1>Изменение</h1>

<h4>Плейлист</h4>
<hr/>
<div class="row justify-content-between">
<div class="col-md-4">
    <form asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Id" class="control-label"></label>
            <input readonly asp-for="Id" class="form-control"/>
        </div>
        <div class="form-group">
            <label class="control-label">Дата создания</label>
            <input readonly asp-for="DateCreated" class="form-control"/>
            <span asp-validation-for="DateCreated" class="text-danger"></span>
        </div>
        <div class="form-group">
            <div style="display: flex">
                <label asp-for="SportId" class="control-label">Вид спорта</label>
                <a class="nav-link p-0 ml-2" asp-area="Admin" asp-controller="Sport" asp-action="Edit" asp-route-id="@Model.SportId">Перейти</a>
            </div>s
            <select asp-for="SportId" class="form-control" asp-items="ViewBag.SportId"></select>
        </div>

        <div class="form-group">
            <label lass="control-label">Ключ товара Apple</label>
            <input asp-for="AppleInAppPurchaseKey" class="form-control"/>
            <span asp-validation-for="AppleInAppPurchaseKey" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label lass="control-label">Ключ товара Google</label>
            <input asp-for="GoogleInAppPurchaseKey" class="form-control"/>
            <span asp-validation-for="GoogleInAppPurchaseKey" class="text-danger"></span>
        </div>

        <div class="form-group">
            <input type="submit" value="Сохранить" class="btn btn-primary"/>
        </div>
        <div>
            <a asp-action="Index">Назад к списку</a>
        </div>
    </form>
</div>

<div class="col-md-8 ">
    <h4>Локализации</h4>
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>
                    Культура
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    Название
                </th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in _db.Cultures.ToList())
            {
                var matchedTranslation = Model.Translations.FirstOrDefault(x => x.CultureId == item.Id);
                if (matchedTranslation != null)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => matchedTranslation.Culture.Key)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => matchedTranslation.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => matchedTranslation.Name)
                        </td>
                        <td>
                            <a asp-area="Admin" asp-controller="PlaylistTranslation" asp-action="Edit" asp-route-id="@matchedTranslation.Id">Изменить</a> |
                            <a asp-area="Admin" asp-controller="PlaylistTranslation" asp-action="Delete" asp-route-id="@matchedTranslation.Id">Удалить</a>
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Key)
                        </td>

                        <td>
                            <a asp-area="Admin" asp-controller="PlaylistTranslation" asp-action="Create" asp-route-baseEntityId="@Model.Id" asp-route-cultureId="@item.Id">Создать</a>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
</div>

<div class="col-md-6">
    <div style="display: flex;">
        <h4>Видео</h4>
        <a asp-area="Admin" asp-controller="Video" asp-action="Create" asp-route-playlistId="@Model.Id" class="nav-link">Создать</a>
    </div>
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    Название
                </th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Videos.ToList())
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.OfCulture(Culture.Russian).Content.Name)
                    </td>
                    <td>
                        <a asp-area="Admin" asp-controller="Video" asp-action="Edit" asp-route-id="@item.Id">Изменить</a> |
                        <a asp-area="Admin" asp-controller="Video" asp-action="Delete" asp-route-id="@item.Id">Удалить</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<div class="col-md-6">
    <h4>Цены</h4>
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>
                    Валюта
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    Цена
                </th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in _db.Currencies.ToList())
            {
                var matchedPrice = Model.Prices.FirstOrDefault(x => x.CurrencyId == item.Id);
                if (matchedPrice != null)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => matchedPrice.Currency.Key)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => matchedPrice.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => matchedPrice.Value)
                        </td>
                        <td>
                            <a asp-area="Admin" asp-controller="EntitySaleablePrice" asp-action="Edit" asp-route-id="@matchedPrice.Id">Изменить</a> |
                            <a asp-area="Admin" asp-controller="EntitySaleablePrice" asp-action="Delete" asp-route-id="@matchedPrice.Id">Удалить</a>
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Key)
                        </td>

                        <td>
                            <a asp-area="Admin" asp-controller="EntitySaleablePrice" asp-action="Create" asp-route-baseEntityId="@Model.Id" asp-route-currencyId="@item.Id">Создать</a>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
        <p style="font-style: italic; color: darkgrey">* Сущность является платной если задана хотя-бы одна цена в любой валюте</p>
        <p style="font-style: italic; color: darkgrey">** Для корректной работы во всех регионах нужно обязательно указывать цены во всех доступных валютах</p>

    </div>
</div>
</div>